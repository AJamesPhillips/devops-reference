service: ${env:SERVICE_NAME, 'serverless-fastapi-example'}

frameworkVersion: '3'

plugins:
  - serverless-python-requirements
  - serverless-offline
  - ./plugins/serverless-offline-python-requirements

useDotenv: true

package:
  individually: true
  excludeDevDependencies: true
  include:
    - '!./**'
    - '**/*.py'
  exclude:
    - '**'

custom:
  pythonRequirements:
    dockerizePip: true
    layer: true
    noDeploy:
      - pytest

  serverless-offline:
    httpPort: 3000
    port: 3000
    noPrependStageInUrl: true

provider:
  name: aws
  runtime: python3.9
  environment:
    STAGE: ${sls:stage}
  deploymentBucket:
    blockPublicAccess: true
    versioning: true
    serverSideEncryption: AES256
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: "*"

functions:
  app:
    runtime: python3.9
    package:
      patterns:
        - 'src/**'
        - 'env.providers.json'
        - '!requirements.txt'
        - '!requirements.dev.txt'
        - '!README.md'
        - '!setup.cfg'
        - '!package.json'
        - '!package-lock.json'
        - '!.serverless/**'
        - '!venv/**'
        - '!node_modules/**'
    module: src
    handler: main.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
      - http:
          path: /docs
          method: ANY
          private: false
      - http:
          path: /openapi.json
          method: ANY
          private: false
