service: ${env:SERVICE_NAME, 'AppSync'}

plugins:
  - serverless-plugin-typescript
  - serverless-appsync-plugin
  - serverless-appsync-simulator
  - serverless-offline

useDotenv: true

package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - '*.graphql'
    - 'mapping-templates/*.vtl'

custom:
  serverless-offline:
    httpPort: 3000
    port: 3000
    useChildProcesses: true
  appsync-simulator:
    location: .build
    apiKey: da2-fakeApiId123456
    watch:
      - '*.graphql'
      - '*.vtl'
  appSync:
    name: AppSyncExample
    authenticationType: API_KEY
    schema: schema.graphql
    wafConfig:
      enabled: true
      rules:
        - throttle: 200
    apiKeys:
      - name: AppSyncExample-api-key
        description: 'NaN AppSync API Key'
        expiresAfter: 1y
    defaultMappingTemplates:
      request: false
      response: response.vtl
    mappingTemplates:
      - type: Query
        dataSource: AppSyncExample_lambdaDataSource
        field: getResource
      - type: Query
        dataSource: AppSyncExample_lambdaDataSource
        field: getResources
      - type: Mutation
        dataSource: AppSyncExample_lambdaDataSource
        field: createResource
    dataSources:
      - type: AWS_LAMBDA
        name: AppSyncExample_lambdaDataSource
        description: 'NaN AppSync Lambda DataSource'
        config:
          functionName: AppSyncExampleResolver
    tags:
      name: AppSyncExample

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, env:STAGE, 'local'}
  region: ${opt:region, env:AWS_REGION, 'us-east-1'}
  profile: ${opt:aws-profile, env:AWS_PROFILE, ''}
  deploymentBucket:
    blockPublicAccess: true
    versioning: true
    serverSideEncryption: AES256
  # vpc:
  #   securityGroupIds:
  #     - ${env:VPC_SECURITY_GROUP_ID}
  #     - !Ref SecurityGroup
  #   subnetIds:
  #     - ${env:SUBNET_ID}

functions:
  AppSyncExampleResolver:
    handler: src/resolvers/handler.graphqlHandler

# resources:
#   Resources:
#     AppSyncSecurityGroup:
#       Type: AWS::EC2::SecurityGroup
#       Properties:
#         GroupName: AppSyncExampleSG
#         GroupDescription: AppSync Security Group
#         SecurityGroupIngress:
#           - IpProtocol: tcp
#             FromPort: 8182
#             ToPort: 8182
#             CidrIp: 0.0.0.0/0
#         Tags:
#           - Key: name
#             Value: AppSyncExampleSG
#         VpcId: ${env:VPC_ID}

#   Outputs:
#     SecurityGroup:
#       Description: AppSync Security Group
#       Value: !GetAtt AppSyncSecurityGroup.GroupId

resources:
  Outputs:
    AppSyncApiUrl:
      Value: !GetAtt GraphQlApi.GraphQLUrl
