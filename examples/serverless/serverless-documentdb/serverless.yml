service: DocumentDBExample

useDotenv: true

custom:
  documentdb:
    clusterIdentifier: ${self:service}-${self:provider.stage}-${env:DOCUMENTDB_CLUSTER_IDENTIFIER}
    masterUsername: ${env:DOCUMENTDB_MASTER_USERNAME}
    database: ${env:DOCUMENTDB_DATABASE_NAME}
  vpc:
    cidr: ${env:VPC_CIDR, '10.0.0.0/16'}

provider:
  name: aws
  stage: ${opt:stage, env:STAGE, 'local'}
  region: ${opt:region, env:AWS_REGION, 'us-east-1'}
  profile: ${opt:aws-profile, env:AWS_PROFILE, ''}

resources:
  Conditions:
    CreateDocumentDBCluster:
      Fn::Equals:
        - ${param:skipDocumentDBClusterCreation, env:SKIP_DOCUMENTDB_CLUSTER_CREATION, 'false'}
        - "false"
    CreateNetworkResources:
      Fn::Equals:
        - ${param:skipNetworkResources, env:SKIP_NETWORK_RESOURCES, 'false'}
        - "false"
    CreateVpc:
      Fn::And:
        - Condition: CreateNetworkResources
        - Fn::Equals:
            - ${param:vpcId, env:VPC_ID, ''}
            - ""

  Resources:
    DocumentDBConnectionSecret: ${file(./resources/DocumentDBConnectionSecret.yml)}
    DocumentDBCluster: ${file(./resources/DocumentDBCluster.yml)}
    DocumentDBInstanceWriter: ${file(./resources/DocumentDBInstanceWriter.yml)}
    DocumentDBInstanceReaderOne: ${file(./resources/DocumentDBInstanceReaderOne.yml)}
    DocumentDBInstanceReaderTwo: ${file(./resources/DocumentDBInstanceReaderTwo.yml)}
    DocumentDBSecurityGroup: ${file(./resources/DocumentDBSecurityGroup.yml)}
    DocumentDBSubnetGroup: ${file(./resources/DocumentDBSubnetGroup.yml)}
    VPC: ${file(./resources/VPC.yml)}
    InternetGateway: ${file(./resources/InternetGateway.yml)}
    VPCGatewayAttachment: ${file(./resources/VPCGatewayAttachment.yml)}
    PrivateSubnetOne: ${file(./resources/PrivateSubnetOne.yml)}
    PrivateRouteTableOne: ${file(./resources/PrivateRouteTableOne.yml)}
    PrivateRouteOne: ${file(./resources/PrivateRouteOne.yml)}
    PrivateSubnetOneRouteTableAssociation: ${file(./resources/PrivateSubnetOneRouteTableAssociation.yml)}
    PrivateSubnetTwo: ${file(./resources/PrivateSubnetTwo.yml)}
    PrivateRouteTableTwo: ${file(./resources/PrivateRouteTableTwo.yml)}
    PrivateRouteTwo: ${file(./resources/PrivateRouteTwo.yml)}
    PrivateSubnetTwoRouteTableAssociation: ${file(./resources/PrivateSubnetTwoRouteTableAssociation.yml)}
    Cloud9env: ${file(./resources/Cloud9env.yml)}

  Outputs:
    DocumentDBCluster:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - !Ref DocumentDBCluster
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBCluster, ''}
    DocumentDBInstanceWriter:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - !Ref DocumentDBInstanceWriter
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBInstanceWriter, ''}
    DocumentDBInstanceReaderOne:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - !Ref DocumentDBInstanceReaderOne
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBInstanceReaderOne, ''}
    DocumentDBInstanceReaderTwo:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - !Ref DocumentDBInstanceReaderTwo
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBInstanceReaderTwo, ''}
    DocumentDBSubnetGroup:
      Value:
        Fn::If:
          - CreateNetworkResources
          - !Ref DocumentDBSubnetGroup
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBSubnetGroup, ''}
    DocumentDBSecurityGroup:
      Value:
        Fn::If:
          - CreateNetworkResources
          - !Ref DocumentDBSecurityGroup
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBSecurityGroup, ''}
    DocumentDBClusterEndpoint:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - !GetAtt DocumentDBCluster.Endpoint
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBClusterEndpoint, ''}
    DocumentDBClusterPort:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - !GetAtt DocumentDBCluster.Port
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBClusterPort, ''}
    DocumentDBConnectionSecret:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - !Ref DocumentDBConnectionSecret
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBConnectionSecret, ''}
    DocumentDBConnectionSecretName:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - ${self:provider.stage}/${self:service}
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBConnectionSecretName, ''}
    VpcId:
      Value:
        Fn::If:
          - CreateVpc
          - !Ref VPC
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.VpcId, env:VPC_ID, ''}
    InternetGateway:
      Value:
        Fn::If:
          - CreateVpc
          - !Ref InternetGateway
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.InternetGateway, env:INTERNET_GATEWAY_ID, ''}
    VPCGatewayAttachment:
      Value:
        Fn::If:
          - CreateVpc
          - !Ref VPCGatewayAttachment
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.VPCGatewayAttachment, ''}
    PrivateSubnetOne:
      Value:
        Fn::If:
          - CreateNetworkResources
          - !Ref PrivateSubnetOne
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateSubnetOne, env:PRIVATE_SUBNET_ONE, ''}
    PrivateRouteTableOne:
      Value:
        Fn::If:
          - CreateNetworkResources
          - !Ref PrivateRouteTableOne
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateRouteTableOne, ''}
    PrivateRouteOne:
      Value:
        Fn::If:
          - CreateNetworkResources
          - !Ref PrivateRouteOne
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateRouteOne, ''}
    PrivateSubnetTwo:
      Value:
        Fn::If:
          - CreateNetworkResources
          - !Ref PrivateSubnetTwo
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateSubnetTwo, env:PRIVATE_SUBNET_TWO, ''}
    PrivateRouteTableTwo:
      Value:
        Fn::If:
          - CreateNetworkResources
          - !Ref PrivateRouteTableTwo
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateRouteTableTwo, ''}
    PrivateRouteTwo:
      Value:
        Fn::If:
          - CreateNetworkResources
          - !Ref PrivateRouteTwo
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateRouteTwo, ''}
    Cloud9env:
      Value:
        Fn::If:
          - CreateDocumentDBCluster
          - !Ref Cloud9env
          - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.Cloud9env, ''}
