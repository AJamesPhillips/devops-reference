Outputs:
  DocumentDBCluster:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBCluster
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBCluster, param:DocumentDBCluster, ''}
  DocumentDBInstanceWriter:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBInstanceWriter
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBInstanceWriter, param:DocumentDBInstanceWriter, ''}
  DocumentDBInstanceReaderOne:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBInstanceReaderOne
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBInstanceReaderOne, param:DocumentDBInstanceReaderOne, ''}
  DocumentDBInstanceReaderTwo:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBInstanceReaderTwo
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBInstanceReaderTwo, param:DocumentDBInstanceReaderTwo, ''}
  DocumentDBSubnetGroup:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBSubnetGroup
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBSubnetGroup, param:DocumentDBSubnetGroup, ''}
  DocumentDBSecurityGroup:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBSecurityGroup
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBSecurityGroup, param:DocumentDBSecurityGroup, ''}
  DocumentDBClusterEndpoint:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !GetAtt DocumentDBCluster.Endpoint
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBClusterEndpoint, param:DocumentDBClusterEndpoint, ''}
  DocumentDBClusterPort:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !GetAtt DocumentDBCluster.Port
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBClusterPort, param:DocumentDBClusterPort, ''}
  DocumentDBConnectionSecret:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBConnectionSecret
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBConnectionSecret, param:DocumentDBConnectionSecret, ''}
  DocumentDBConnectionSecretName:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - ${self:provider.stage}/${self:service}
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBConnectionSecretName, param:DocumentDBConnectionSecretName, ''}
  DocumentDBConnectionSecretRotationSchedule:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBConnectionSecretRotationSchedule
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBConnectionSecretRotationSchedule, param:DocumentDBConnectionSecretRotationSchedule, ''}
  DocumentDBConnectionSecretTargetAttachment:
    Value:
      Fn::If:
        - CreateDocumentDBCluster
        - !Ref DocumentDBConnectionSecretTargetAttachment
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.DocumentDBConnectionSecretTargetAttachment, param:DocumentDBConnectionSecretTargetAttachment, ''}
  VpcId:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref VPC
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.VpcId, param:VpcId, env:VPC_ID, ''}
  SecretsManagerVPCEndpoint:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref SecretsManagerVPCEndpoint
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.SecretsManagerVPCEndpoint, param:SecretsManagerVPCEndpoint, ''}
  InternetGateway:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref InternetGateway
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.InternetGateway, param:InternetGateway, env:INTERNET_GATEWAY_ID, ''}
  GatewayAttachment:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref GatewayAttachment
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.GatewayAttachment, param:GatewayAttachment, ''}
  NatGatewayOneAttachment:
    Value:
      Fn::If:
        - CreateNatGateways
        - !Ref NatGatewayOneAttachment
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.NatGatewayOneAttachment, param:NatGatewayOneAttachment, ''}
  NatGatewayOne:
    Value:
      Fn::If:
        - CreateNatGateways
        - !Ref NatGatewayOne
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.NatGatewayOne, param:NatGatewayOne, env:NAT_GATEWAY_ONE_ID, ''}
  NatGatewayTwoAttachment:
    Value:
      Fn::If:
        - CreateNatGateways
        - !Ref NatGatewayTwoAttachment
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.NatGatewayTwoAttachment, param:NatGatewayTwoAttachment, ''}
  NatGatewayTwo:
    Value:
      Fn::If:
        - CreateNatGateways
        - !Ref NatGatewayTwo
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.NatGatewayTwo, param:NatGatewayTwo, env:NAT_GATEWAY_TWO_ID, ''}
  PublicSubnetOne:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref PublicSubnetOne
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PublicSubnetOne, param:PublicSubnetOne, env:PUBLIC_SUBNET_ONE_ID, ''}
  PublicSubnetTwo:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref PublicSubnetTwo
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PublicSubnetTwo, param:PublicSubnetTwo, env:PUBLIC_SUBNET_TWO_ID, ''}
  PublicRoute:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref PublicRoute
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PublicRoute, param:PublicRoute, ''}
  PublicRouteTable:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref PublicRouteTable
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PublicRouteTable, param:PublicRouteTable, ''}
  PublicSubnetOneRouteTableAssociation:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref PublicSubnetOneRouteTableAssociation
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PublicSubnetOneRouteTableAssociation, param:PublicSubnetOneRouteTableAssociation, ''}
  PublicSubnetTwoRouteTableAssociation:
    Value:
      Fn::If:
        - CreateVpc
        - !Ref PublicSubnetTwoRouteTableAssociation
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PublicSubnetTwoRouteTableAssociation, param:PublicSubnetTwoRouteTableAssociation, ''}
  PrivateSubnetOne:
    Value:
      Fn::If:
        - CreateNetworkResources
        - !Ref PrivateSubnetOne
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateSubnetOne, param:PrivateSubnetOne, env:PRIVATE_SUBNET_ONE, ''}
  PrivateRouteTableOne:
    Value:
      Fn::If:
        - CreateNetworkResources
        - !Ref PrivateRouteTableOne
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateRouteTableOne, param:PrivateRouteTableOne, ''}
  PrivateRouteOne:
    Value:
      Fn::If:
        - CreateNatGateways
        - !Ref PrivateRouteOne
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateRouteOne, param:PrivateRouteOne, ''}
  PrivateSubnetTwo:
    Value:
      Fn::If:
        - CreateNetworkResources
        - !Ref PrivateSubnetTwo
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateSubnetTwo, param:PrivateSubnetTwo, env:PRIVATE_SUBNET_TWO, ''}
  PrivateRouteTableTwo:
    Value:
      Fn::If:
        - CreateNetworkResources
        - !Ref PrivateRouteTableTwo
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateRouteTableTwo, param:PrivateRouteTableTwo, ''}
  PrivateRouteTwo:
    Value:
      Fn::If:
        - CreateNatGateways
        - !Ref PrivateRouteTwo
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.PrivateRouteTwo, param:PrivateRouteTwo, ''}
  Cloud9env:
    Value:
      Fn::If:
        - CreateCloud9Environment
        - !Ref Cloud9env
        - ${cf:${self:service}-${env:USE_EXISTING_RESOURCES_FROM_STAGE, ''}.Cloud9env, param:Cloud9env, ''}
